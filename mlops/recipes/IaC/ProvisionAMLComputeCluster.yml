# For parameter details refer to the cli spec: https://docs.microsoft.com/en-us/cli/azure/ext/azure-cli-ml/ml/computetarget/create?view=azure-cli-latest#ext-azure-cli-ml-az-ml-computetarget-create-amlcompute
  rm-service-connection: compute-rm-service-connection
  print-cli-string: true
  max-nodes: 2
  name: devopsmlcompute
  vm-size: "Standard_D12_v2"
  admin-user-password:
  admin-user-ssh-key:
  admin-username:
  description:
  idle-seconds-before-scaledown:
  min-nodes:
  no-wait:
  path:
  remote-login-port-public-access:
  resource-group: "MCW-AI-Lab"
  subnet-name:
  tag:
  vm-priority: lowpriority
  vnet-name: "mlvnet"
  vnet-resourcegroup-name: "MCW-AI-Lab"
  workspace-name: "AML-Workspace"

jobs:
- job: ProvisionAMLCompute

  variables:
      #cli command to be used. e.g. az ml ..
    cli-cmd: az ml computetarget create amlcompute

      #prepare parameters to be compatible with cli input: (a) format it to --param value (b) remove empty params
    ${{ each param in parameters }}:
      ${{ if ne(param.value, '') }}:
        ${{ param.key }}-cli: ' --${{param.key}} ${{param.value}}'

      #construct the final cli input by appending cli-cmd and all cli params
    cli-input: ${{ variables['cli-cmd'] }}${{ variables['max-nodes-cli'] }}${{ variables['name-cli']
      }}${{ variables['vm-size-cli'] }}${{ variables['admin-user-password-cli'] }}${{
      variables['admin-user-ssh-key-cli'] }}${{ variables['admin-username-cli'] }}${{
      variables['description-cli'] }}${{ variables['idle-seconds-before-scaledown-cli']
      }}${{ variables['min-nodes-cli'] }}${{ variables['no-wait-cli'] }}${{ variables['path-cli']
      }}${{ variables['remote-login-port-public-access-cli'] }}${{ variables['resource-group-cli']
      }}${{ variables['subnet-name-cli'] }}${{ variables['tag-cli'] }}${{ variables['vm-priority-cli']
      }}${{ variables['vnet-name-cli'] }}${{ variables['vnet-resourcegroup-name-cli']
      }}${{ variables['workspace-name-cli'] }}

  steps:
    #Print the constructed CLI string if the print-cli-string flag is true
  - ${{ if eq(parameters['print-cli-string'], true) }}:
    - script: "echo Generated CLI: ${{ variables['cli-input'] }}"
      displayName: Print CLI string

    #install the Azure ML CLI
  - task: AzureCLI@2
    displayName: Install the CLI
    inputs:
      scriptType: bash
      azureSubscription: ${{ parameters['rm-service-connection'] }}
      scriptLocation: inlineScript
      inlineScript: az extension add -n azure-cli-ml

    #run the generated cli
  - task: AzureCLI@2
    displayName: Provision AML compute cluster
    inputs:
      scriptType: bash
      azureSubscription: ${{ parameters['rm-service-connection'] }}
      scriptLocation: inlineScript
      inlineScript: ${{ variables['cli-input'] }}
